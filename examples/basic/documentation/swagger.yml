swagger: "2.0"
info:
  version: "1.0.0"
  title: "treehouse-documentation"
host: "localhost:3000"
basePath: "/api/v1"
schemes:
  - "http"
  - "https"
securityDefinitions:
  Bearer:
    name: Authorization
    type: apiKey
    in: header
    description: 'Please use the following format: Bearer <ApiKey>'
paths:
  /locations:
    get:
      tags:
      - "locations"
      summary: "Get all locations"
      responses:
        200:
          description: "return all locations"
          schema:
            type: array
            items:
              $ref: "#/definitions/LocationsForAppResponse"
        401:
          description: "401 Unauthorized"
          schema:
            $ref: "#/definitions/ErrorModel"
  /pickups:
    post:
      tags:
      - "pickups"
      summary: "Add a pickup request"
      parameters:
        - name: "pickup request"
          in: "body"
          description: "pickup request to be created"
          required: true
          schema:
            $ref: "#/definitions/PostPickup"
      responses:
        200:
          description: "returns the new object"
          schema:
            $ref: "#/definitions/PickupResponse"
        401:
          description: "401 Unauthorized"
          schema:
            $ref: "#/definitions/ErrorModel"
  /deliveries:
    post:
      tags:
      - "deliveries"
      summary: "Add a delivery request"
      parameters:
        - name: "delivery request"
          in: "body"
          description: "delivery request to be created"
          required: true
          schema:
            $ref: "#/definitions/PostDelivery"
      responses:
        200:
          description: "returns the new object"
          schema:
            $ref: "#/definitions/DeliveryResponse"
        401:
          description: "401 Unauthorized"
          schema:
            $ref: "#/definitions/ErrorModel"
definitions:
    LocationForApp:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        number:
          type: string
        positionX:
          type: number
          format: double
        positionY:
          type: number
          format: double
        street:
          type: string
    LocationsForAppResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              type:
                type: string
              attributes:
                $ref: "#/definitions/LocationForApp"
    Pickup:
      type: object
      required:
        - "bagsRequested"
        - "comment"
        - "locationId"
      properties:
        id:
          type: string
          format: uuid
        requestId:
          type: number
        bagsRequested:
          type: boolean
        comment:
          type: string
        locationId:
          type: string
          format: uuid
    PostPickup:
      type: object
      required:
        - "bagsRequested"
        - "comment"
        - "locationId"
      properties:
        bagsRequested:
          type: boolean
        comment:
          type: string
        locationId:
          type: string
          format: uuid
    PickupResponse:
      type: object
      properties:
        data:
          $ref: "#/definitions/Pickup"
    Delivery:
      type: object
      required:
        - "locationId"
      properties:
        id:
          type: string
          format: uuid
        requestId:
          type: number
        locationId:
          type: string
          format: uuid
    PostDelivery:
      type: object
      required:
        - "locationId"
      properties:
        locationId:
          type: string
          format: uuid
    DeliveryResponse:
      type: object
      properties:
        data:
          $ref: "#/definitions/Delivery"
    ErrorModel:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
parameters:
  authorizationParams:
    name: Authorization
    in: header
    description: 'Session token to be passed as a header using the Bearer schema.'
    required: true
    type: string
